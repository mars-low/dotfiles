// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.245.0/containers/codespaces-linux
{
	"name": "Codespace",
  // Dockerfile: https://github.com/mars-low/dev-container
  "image": "ghcr.io/mars-low/dev-container:main",

	// Configure tool-specific properties.
	"customizations": {
	 	// Configure properties specific to VS Code.
		"vscode": {
	 		// Set *default* container specific settings.json values on container create.
			"settings": { 

			},
			
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-vscode.cpptools",
				"ms-dotnettools.csharp",
				"twxs.cmake",
				"ms-vscode.cmake-tools",
				"marus25.cortex-debug",
				"nia40m.display-nums",
				"ms-azuretools.vscode-docker",
				"GitHub.copilot",
				"GitHub.vscode-pull-request-github",
				"eamodio.gitlens",
				"ms-vscode.hexeditor",
				"icsharpcode.ilspy-vscode",
				"ms-python.isort",
				"mcu-debug.memory-view",
				"ms-vscode.mono-debug",
				"webfreak.debug",
				"ryu1kn.partial-diff",
				"ms-python.vscode-pylance",
				"ms-python.python",
				"robocorp.robotframework-lsp",
				"mcu-debug.rtos-views",
				"timonwong.shellcheck",
				"redhat.vscode-xml",
				"ms-dotnettools.vscode-dotnet-runtime",
				"mike-lischke.vscode-antlr4",
				"rogalmic.bash-debug",
				"vadimcn.vscode-lldb",
				"ms-vscode.vscode-embedded-tools",
				"usernamehw.errorlens",
				"cschleiden.vscode-github-actions",
				"VisualStudioExptTeam.vscodeintellicode",
				"VisualStudioExptTeam.intellicode-api-usage-examples",
				"ms-toolsai.jupyter",
				"ms-toolsai.vscode-jupyter-cell-tags",
				"ms-toolsai.jupyter-renderers",
				"ms-toolsai.vscode-jupyter-slideshow",
				"ms-vscode.makefile-tools",
				"tintoy.msbuild-project-tools",
				"nordic-semiconductor.nrf-devicetree",
				"nordic-semiconductor.nrf-kconfig",
				"ms-dotnettools.dotnet-interactive-vscode",
				"trond-snekvik.simple-rst",
			]
		}
	},

	"remoteUser": "codespace",

	"overrideCommand": false,

	"mounts": [
		"source=codespaces-linux-var-lib-docker,target=/var/lib/docker,type=volume",
		"source=/workdir,target=/workdir,type=bind,consistency=cached",
	],

	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"--privileged",
		"--init",
		// "--add-host=host.docker.internal:host-gateway"
	],
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [],
	
	"workspaceFolder": "/home/codespace",

	// "oryx build" will automatically install your dependencies and attempt to build your project
	"postCreateCommand": "sudo oryx build -p virtualenv_name=.venv --log-file /tmp/oryx-build.log --manifest-dir /tmp || echo 'Could not auto-build. Skipping.'",
	"postStartCommand": "cd && sh -c \"$(curl -fsLS https://chezmoi.io/get)\" && export PATH=$PATH:$HOME/bin && chezmoi init --apply mars-low",
	// "postAttachCommand": "exec zsh"
}
